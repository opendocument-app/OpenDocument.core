name: build_test

on: pull_request

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-20.04, cc: clang, cxx: clang++ }
          - { os: ubuntu-20.04, cc: gcc, cxx: g++ }
          - { os: macos-10.15, cc: clang, cxx: clang++ }

    steps:
      - name: ubuntu install ccache
        if: startsWith(matrix.config.os, 'ubuntu')
        run: sudo apt install ccache
      - name: macos install ccache
        if: startsWith(matrix.config.os, 'macos')
        run: brew install ccache
      - run: ccache -V

      - name: ccache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.ccache
            /Users/runner/Library/Caches/ccache
          key: ${{ matrix.config.os }}-${{ matrix.config.cxx }}-rev12
          restore-keys: |
            ${{ matrix.config.os }}-${{ matrix.config.cxx }}-

      - name: checkout
        uses: actions/checkout@v2

      - name: cmake
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          mkdir -p build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
      - name: make
        run: |
          cd build
          cmake --build .

      - name: upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: bin-${{ matrix.config.os }}-${{ matrix.config.cxx }}
          path: |
            build/test/odr_test

  test:
    needs: build
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - { os: ubuntu-20.04, cc: clang, cxx: clang++ }
          - { os: macos-10.15, cc: clang, cxx: clang++ }

    steps:
      - name: ubuntu install tidy
        if: startsWith(matrix.config.os, 'ubuntu')
        run: sudo apt install tidy
      - name: macos install tidy
        if: startsWith(matrix.config.os, 'macos')
        run: brew install tidy-html5

      - name: checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_ANDIWAND }}
          submodules: true

      - name: set up python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test/scripts/requirements.txt

      - name: download binaries
        uses: actions/download-artifact@v2
        with:
          name: bin-${{ matrix.config.os }}-${{ matrix.config.cxx }}
          path: build/test
      - name: fix artifact permissions
        run:  chmod +x build/test/odr_test

      - name: test
        working-directory: build/test
        run: ./odr_test

      - name: tidy public test outputs
        run: python3 -u test/scripts/tidy_output.py build/test/output/odr-public
      - name: compare public test outputs
        run: python3 -u test/scripts/compare_output.py --driver firefox --max-workers 1 test/data/reference-output/odr-public build/test/output/odr-public

      - name: tidy private test outputs
        run: python3 -u test/scripts/tidy_output.py build/test/output/odr-private
      - name: compare private test outputs
        run: python3 -u test/scripts/compare_output.py --driver firefox --max-workers 1 test/data/reference-output/odr-private build/test/output/odr-private
